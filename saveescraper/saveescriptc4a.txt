#!/usr/bin/env python3
"""
Generated by Crawl4AI Chrome Extension - Script Builder (ALPHA)
URL: https://savee.com/i/NUjvXox/
Generated: 2025-08-20T11:44:48.122Z
"""

import asyncio
from pathlib import Path
from crawl4ai import AsyncWebCrawler, BrowserConfig, CrawlerRunConfig
from crawl4ai.extraction_strategy import JsonCssExtractionStrategy

# C4A Script commands
C4A_SCRIPT = """
CLICK `div:nth-child(1) > main > div:nth-child(5) > div:nth-child(1) > div > div:nth-child(1) > div > div:nth-child(3) > div > a > div:nth-child(2) > div:nth-child(2) > div`\nCLICK `div:nth-child(13) > div > div > div > div:nth-child(2) > div > div > div:nth-child(1) > div > div:nth-child(1) > ul > li:nth-child(4) > ul > button > span:nth-child(1)`\nSCROLL `div:nth-child(13) > div > div > div > div:nth-child(2) > div > div` UP NaN
"""

# Save the C4A script for reference
script_path = Path('automation_script.c4a')
with open(script_path, 'w') as f:
    f.write(C4A_SCRIPT)

print(f"ðŸ’¾ C4A Script saved to: {script_path}")
print("\nðŸ“œ Generated C4A Script:")
print(C4A_SCRIPT)

# Note: To execute C4A scripts, you'll need to use the C4A Script compiler
# Example:
# from crawl4ai.script import C4ACompiler
# compiler = C4ACompiler()
# js_code = compiler.compile(C4A_SCRIPT)
# 
# Then use js_code in CrawlerRunConfig as shown in the JavaScript example above

print("\nðŸ’¡ To execute this C4A script, compile it to JavaScript first!")
